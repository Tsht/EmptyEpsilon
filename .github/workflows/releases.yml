---
name: "Tagged Release"

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    name: Linux Tagged Release Build
    runs-on: ubuntu-latest
    steps:
      - name: Dependencies
        run: |
          sudo apt update -qq
          sudo apt install build-essential cmake ninja-build zip unzip libsfml-dev
      - name: SeriousProton Checkout
        uses: actions/checkout@v2
        with:
          repository: tsht/SeriousProton
          path: SeriousProton  
      - name: EmptyEpsilon Checkout
        uses: actions/checkout@v2
        with:
          path: EmptyEpsilon
      - name: Build
        run: |
          mkdir -p _build_linux
          cd _build_linux
          cmake ../EmptyEpsilon -G Ninja -DSERIOUS_PROTON_DIR=../SeriousProton
          ninja package
          cd .. 
      - name: Upload Linux build
        uses: actions/upload-artifact@v2
        with:
          name: linux-build
          path: _build_linux/*.deb
  build-windows:
    name: Windows (Cross-Compile) Tagged Release Build
    runs-on: ubuntu-18.04
    steps:
      - name: Dependencies
        run: |
          sudo apt update -qq
          sudo apt install build-essential cmake python3-minimal mingw-w64 ninja-build p7zip-full
      - name: SeriousProton Checkout
        uses: actions/checkout@v2
        with:
          repository: tsht/SeriousProton
          path: SeriousProton  
      - name: EmptyEpsilon Checkout
        uses: actions/checkout@v2
        with:
          path: EmptyEpsilon
      - name: Build
        run: |
          mkdir -p _build_win32
          cd _build_win32
          cmake ../EmptyEpsilon -G Ninja -DCMAKE_MAKE_PROGRAM=ninja -DCMAKE_TOOLCHAIN_FILE=../EmptyEpsilon/cmake/mingw_ubuntu.toolchain -DSERIOUS_PROTON_DIR=../SeriousProton
          ninja package
          cd .. 
      - name: Upload Win build
        uses: actions/upload-artifact@v2
        with:
          name: windows-build
          path: _build_win32/*.zip

  tagged-release-update:
    name: "Tagged Release"
    runs-on: ubuntu-18.04
    needs: [build-linux, build-windows]
    steps:
      - uses: actions/download-artifact@v2
        name: Download Linux build
        with:
          name: linux-build
      - uses: actions/download-artifact@v2
        name: Download Windows build
        with:
          name: windows-build
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            *.zip
            *.deb
